import { Request, Response, NextFunction } from 'express';\n\nexport function requestLogger(req: Request, res: Response, next: NextFunction) {\n  const start = Date.now();\n  const method = req.method;\n  const path = req.path;\n  let capturedJsonResponse: Record<string, any> | undefined = undefined;\n\n  const originalResJson = res.json;\n  res.json = function (bodyJson, ...args) {\n    capturedJsonResponse = bodyJson;\n    return originalResJson.apply(res, [bodyJson, ...args]);\n  };\n\n  res.on('finish', () => {\n    const duration = Date.now() - start;\n    let logLine = `${method} ${path} ${res.statusCode} in ${duration}ms`;\n    \n    if (capturedJsonResponse) {\n      logLine += ` :: ${JSON.stringify(capturedJsonResponse)}`;\n    }\n\n    if (logLine.length > 120) {\n      logLine = logLine.slice(0, 119) + 'â€¦';\n    }\n\n    console.log(logLine);\n  });\n\n  next();\n}\n