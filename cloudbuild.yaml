steps:
  - name: 'node:20'
    entrypoint: 'npm'
    args: ['ci']
    
  - name: 'node:20'
    entrypoint: 'bash'
    args: ['-c', 'npm run check || echo "TypeScript errors detected but continuing build"']
    
  - name: 'node:20'
    entrypoint: 'npm'
    args: ['run', 'build']
    
  - name: 'node:20'
    entrypoint: 'bash'
    args: ['-c', 'npm audit --audit-level moderate || echo "Security vulnerabilities detected but continuing build"']
    
  - name: 'gcr.io/cloud-builders/docker'
    args: [
      'build',
      '-t', 'gcr.io/$PROJECT_ID/sbg-with-aqi:$BUILD_ID',
      '-t', 'gcr.io/$PROJECT_ID/sbg-with-aqi:latest',
      '.'
    ]
    
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/sbg-with-aqi:$BUILD_ID']
    
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/sbg-with-aqi:latest']
    
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        SERVICE_URL="https://sbg-with-aqi-$PROJECT_ID.a.run.app"
        gcloud run deploy sbg-with-aqi \
          --image gcr.io/$PROJECT_ID/sbg-with-aqi:$BUILD_ID \
          --region us-central1 \
          --platform managed \
          --allow-unauthenticated \
          --port 5000 \
          --memory 1Gi \
          --cpu 1 \
          --min-instances 0 \
          --max-instances 5 \
          --concurrency 80 \
          --cpu-throttling \
          --execution-environment gen2 \
          --set-env-vars "NODE_ENV=production,GOOGLE_CLOUD_PROJECT=$PROJECT_ID,GOOGLE_SQL_REGION=us-central1,GOOGLE_SQL_INSTANCE=aqi-development,ENCRYPTION_KEY=production-encryption-key-32-chars-long,GOOGLE_SQL_DATABASE=aqi_development,GOOGLE_SQL_USERNAME=postgres" \
          --set-env-vars "PROD_GOOGLE_CLIENT_ID=placeholder-client-id,PROD_GOOGLE_CLIENT_SECRET=placeholder-client-secret,PROD_SESSION_SECRET=production-session-secret-change-me,PROD_WEB_SERVICE_API_KEY=dps_demo_key_development_only" \
          --set-env-vars "PROD_GOOGLE_REDIRECT_URI=$${SERVICE_URL}/auth/google/callback,PROD_WEB_SERVICE_BASE_URL=$${SERVICE_URL}" \
          --set-env-vars "DATABASE_URL=postgresql://postgres:${_GOOGLE_SQL_PASSWORD}@localhost/aqi_development?host=/cloudsql/$PROJECT_ID:us-central1:aqi-development&sslmode=disable" \
          --set-env-vars "OPENAI_API_KEY=${_OPENAI_API_KEY},GOOGLE_SQL_PASSWORD=${_GOOGLE_SQL_PASSWORD}" \
          --add-cloudsql-instances $PROJECT_ID:us-central1:aqi-development
    
  - name: 'gcr.io/cloud-builders/curl'
    entrypoint: 'bash'
    args:
      - '-c'
      - |
        SERVICE_URL=$$(gcloud run services describe sbg-with-aqi \
          --region=us-central1 --format="value(status.url)")
        echo "Service deployed at: $$SERVICE_URL"
        sleep 30
        curl -f "$$SERVICE_URL/api/health" || exit 1
        echo "âœ… Health check passed"

options:
  machineType: 'E2_HIGHCPU_8'
  
timeout: '1200s'

images:
  - 'gcr.io/$PROJECT_ID/sbg-with-aqi:$BUILD_ID'
  - 'gcr.io/$PROJECT_ID/sbg-with-aqi:latest'
